name: ASP.NETCore 6

on:
  push:
    branches: ["main", "dev*"]
    tags: ["*.*.*"]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macos-11, ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET Core 6.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
      - name: dotnet info
        run: dotnet --info
      - name: Install dotnet tool
        run: dotnet tool restore
      - name: MinVer
        id: minver
        run: echo "::set-output name=version::$(dotnet minver)"
      - name: Docker meta
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKER_HUB_REPOS }}
            netlah/echo-service-api
          tags: |
            type=raw,enable=true,priority=999,prefix=,suffix=,value=${{ steps.minver.outputs.version }}
            type=ref,event=branch,priority=600
            type=sha,enable=true,priority=500,prefix=sha-,suffix=,format=short
            type=match,enable=true,priority=900,prefix=,suffix=,pattern=^(\d+\.\d+(\.\d+)?(-.+)?)$,group=1
            type=match,enable=true,priority=880,prefix=,suffix=,pattern=^(\d+\.\d+(\.\d+))?(-.+)?$,group=1
            type=match,enable=true,priority=870,prefix=,suffix=,pattern=^(\d+\.\d+)(\.\d+)?(-.+)?$,group=1
            type=match,enable=true,priority=860,prefix=,suffix=,pattern=^(\d+)\.\d+(\.\d+)?(-.+)?$,group=1
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test -c Release --no-build --verbosity normal
      - name: Publish
        run: dotnet publish EchoServiceApi -c Release --no-build -o artifacts/app
      - name: Copy Dockerfile
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        run: cp .docker-linux/* artifacts/
      - name: Set up Docker Buildx
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./artifacts
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Image digest
        if: ${{ success() && github.event_name != 'pull_request' && runner.os == 'Linux' }}
        run: echo ${{ steps.docker_build.outputs.digest }}
